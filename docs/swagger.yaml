definitions:
  main.Recipe:
    properties:
      id:
        type: string
      ingredients:
        items:
          type: string
        type: array
      instructions:
        items:
          type: string
        type: array
      name:
        type: string
      publishedAt:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
paths:
  /recipes:
    get:
      consumes:
      - application/json
      description: Returns a list of all available recipes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Recipe'
            type: array
      summary: List recipes
      tags:
      - recipes
    post:
      consumes:
      - application/json
      description: Adds a new recipe to the database
      parameters:
      - description: Recipe data
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/main.Recipe'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Recipe'
        "400":
          description: Bad Request
      summary: Create a new recipe
      tags:
      - recipes
  /recipes/{id}:
    delete:
      description: Remove a recipe from the database using its ID
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Delete an existing recipe
      tags:
      - recipes
    put:
      consumes:
      - application/json
      description: Modify recipe details based on the provided ID
      parameters:
      - description: Recipe ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated recipe data
        in: body
        name: recipe
        required: true
        schema:
          $ref: '#/definitions/main.Recipe'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Recipe'
        "400":
          description: Bad Request
        "404":
          description: Not Found
      summary: Update an existing recipe
      tags:
      - recipes
  /recipes/search:
    get:
      consumes:
      - application/json
      description: Search recipes based on tags
      parameters:
      - description: Recipe tag
        in: query
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Recipe'
            type: array
      summary: Search recipes
      tags:
      - recipes
swagger: "2.0"
